name: Go Microservices CI

on:
  push:
    branches:
      - main # This workflow will run on pushes to the 'main' branch

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-test:
    runs-on: ubuntu-latest # Specifies the operating system for the runner

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Build User Service
        run: |
          cd user-service
          go mod tidy # Ensures go.mod and go.sum are in sync
          go build -v -o main . # Builds the executable named 'main'

      - name: Build Product Service
        run: |
          cd product-service
          go mod tidy
          go build -v -o main . # Builds the executable named 'main'

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build User Service Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./user-service
          push: true
          tags: oliashish3/user-service:latest

      - name: Build Product Service Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./product-service
          push: true
          tags: oliashish3/product-service:latest
